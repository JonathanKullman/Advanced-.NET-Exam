// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tenta_Advnet_Jonathan_Kullman_2;

namespace Tenta_Advnet_Jonathan_Kullman_2.Migrations
{
    [DbContext(typeof(HamsterDbContext))]
    partial class HamsterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Logger_ActivitiesId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Logger_ActivitiesId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.Cage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cages");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.CageBuddies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CageId")
                        .HasColumnType("int");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CageId");

                    b.ToTable("Cagebuds");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.ExerciseArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExerciseAreas");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.Hamster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("CageBuddiesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeOfLastExercise")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CageBuddiesId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Hamsters");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.Logger_Activities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HamsterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HamsterId");

                    b.ToTable("Logger_Activities");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.Activity", b =>
                {
                    b.HasOne("Tenta_Advnet_Jonathan_Kullman_2.Logger_Activities", "Logger_Activities")
                        .WithMany("Activities")
                        .HasForeignKey("Logger_ActivitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Logger_Activities");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.CageBuddies", b =>
                {
                    b.HasOne("Tenta_Advnet_Jonathan_Kullman_2.Cage", "Cage")
                        .WithMany()
                        .HasForeignKey("CageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cage");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.Hamster", b =>
                {
                    b.HasOne("Tenta_Advnet_Jonathan_Kullman_2.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("Tenta_Advnet_Jonathan_Kullman_2.CageBuddies", "CageBuddies")
                        .WithMany()
                        .HasForeignKey("CageBuddiesId");

                    b.HasOne("Tenta_Advnet_Jonathan_Kullman_2.Owner", "Owner")
                        .WithMany("Hamsters")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("CageBuddies");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.Logger_Activities", b =>
                {
                    b.HasOne("Tenta_Advnet_Jonathan_Kullman_2.Hamster", "Hamster")
                        .WithMany("Logger_Activities")
                        .HasForeignKey("HamsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hamster");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.Hamster", b =>
                {
                    b.Navigation("Logger_Activities");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.Logger_Activities", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("Tenta_Advnet_Jonathan_Kullman_2.Owner", b =>
                {
                    b.Navigation("Hamsters");
                });
#pragma warning restore 612, 618
        }
    }
}
